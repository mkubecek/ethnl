From 325a49ce21e24d88c09791c7b9db46df20ad3483 Mon Sep 17 00:00:00 2001
From: Michal Kubecek <mkubecek@suse.cz>
Date: Mon, 11 Mar 2019 08:56:10 +0100
Subject: [PATCH 37/43] ethtool: set FEC parameters with SET_PARAMS request

Add support for setting FEC parameters using SET_PARAMS request with
ETHTOOL_A_PARAMS_FEC nested attribute. This is a replacement for
ETHTOOL_SFECPARAM ioctl command.

Signed-off-by: Michal Kubecek <mkubecek@suse.cz>
---
 Documentation/networking/ethtool-netlink.txt | 13 +++--
 net/ethtool/params.c                         | 51 +++++++++++++++++++-
 2 files changed, 58 insertions(+), 6 deletions(-)

diff --git a/Documentation/networking/ethtool-netlink.txt b/Documentation/networking/ethtool-netlink.txt
index 5d39733f1182..6c3b4e14a7c8 100644
--- a/Documentation/networking/ethtool-netlink.txt
+++ b/Documentation/networking/ethtool-netlink.txt
@@ -473,10 +473,10 @@ SET_PARAMS
 
 SET_PARAMS request modifies the settings retrieved by GET_PARAMS, i.e. it
 replaces ETHTOOL_SCOALESCE, ETHTOOL_SRINGPARAM, ETHTOOL_SPAUSEPARAM,
-ETHTOOL_SCHANNELS and ETHTOOL_SEEE ioctl commands. For each of these, relevant
-data attributes are contained in a corresponding nest attribute. Some of the
-attributes provided by GET_SETPARAMS are read only and cannot be set by
-SET_PARAMS request.
+ETHTOOL_SCHANNELS, ETHTOOL_SEEE and ETHTOOL_SFECPARAM ioctl commands. For each
+of these, relevant data attributes are contained in a corresponding nest
+attribute. Some of the attributes provided by GET_SETPARAMS are read only and
+cannot be set by SET_PARAMS request.
 
     ETHTOOL_A_PARAMS_COALESCE		(nested)	coalescing parameters
         ETHTOOL_A_COALESCE_RX_USECS	    (u32)
@@ -521,6 +521,9 @@ SET_PARAMS request.
         ETHTOOL_A_EEE_ENABLED		    (bool)
         ETHTOOL_A_EEE_TX_LPI_ENABLED	    (bool)
         ETHTOOL_A_EEE_TX_LPI_TIMER	    (u32)
+    ETHTOOL_A_PARAMS_FEC		(nested)	FEC parameters
+        ETHTOOL_A_FEC_MODES		    (bitfield32)
+		- change configured FEC encodings
 
 
 Request translation
@@ -611,4 +614,4 @@ ETHTOOL_SLINKSETTINGS		ETHNL_CMD_SET_SETTINGS
 ETHTOOL_PHY_GTUNABLE		n/a
 ETHTOOL_PHY_STUNABLE		n/a
 ETHTOOL_GFECPARAM		ETHNL_CMD_GET_PARAMS
-ETHTOOL_SFECPARAM		n/a
+ETHTOOL_SFECPARAM		ETHNL_CMD_SET_PARAMS
diff --git a/net/ethtool/params.c b/net/ethtool/params.c
index d81179640af7..403577f8d5e4 100644
--- a/net/ethtool/params.c
+++ b/net/ethtool/params.c
@@ -504,7 +504,7 @@ static const struct nla_policy params_set_policy[ETHTOOL_A_PARAMS_MAX + 1] = {
 	[ETHTOOL_A_PARAMS_PAUSE]		= { .type = NLA_NESTED },
 	[ETHTOOL_A_PARAMS_CHANNELS]		= { .type = NLA_NESTED },
 	[ETHTOOL_A_PARAMS_EEE]			= { .type = NLA_NESTED },
-	[ETHTOOL_A_PARAMS_FEC]			= { .type = NLA_REJECT },
+	[ETHTOOL_A_PARAMS_FEC]			= { .type = NLA_NESTED },
 };
 
 static const struct nla_policy coalesce_policy[ETHTOOL_A_COALESCE_MAX + 1] = {
@@ -897,6 +897,50 @@ static int params_update_eee(struct genl_info *info, struct net_device *dev,
 	return (ret < 0) ? ret : 1;
 }
 
+static const struct nla_policy fec_policy[ETHTOOL_A_FEC_MAX + 1] = {
+	[ETHTOOL_A_FEC_UNSPEC]		= { .type = NLA_REJECT },
+	[ETHTOOL_A_FEC_MODES]		= { .type = NLA_U32 },
+};
+
+/**
+ * params_update_fec() - update FEC parameters from nested attribute
+ * @info: genl_info pointer (only needed for extack)
+ * @dev:  device to set FEC parameters for
+ * @nest: ETHTOOL_A_PARAMS_FEC nested attribute
+ *
+ * Return: negative code on error, 0 if no change, >0 if there was a change
+ */
+static int params_update_fec(struct genl_info *info, struct net_device *dev,
+			     struct nlattr *nest)
+{
+	struct nlattr *tb[ETHTOOL_A_FEC_MAX + 1];
+	struct ethtool_fecparam data = {};
+	bool mod = false;
+	int ret;
+
+	if (!nest)
+		return 0;
+	if (!dev->ethtool_ops->get_fecparam ||
+	    !dev->ethtool_ops->set_fecparam)
+		return -EOPNOTSUPP;
+	ret = dev->ethtool_ops->get_fecparam(dev, &data);
+	if (ret < 0)
+		return ret;
+
+	ret = nla_parse_nested(tb, ETHTOOL_A_FEC_MAX, nest, fec_policy,
+			       info->extack);
+	if (ret < 0)
+		return ret;
+
+	if (ethnl_update_bitfield32(&data.fec, tb[ETHTOOL_A_FEC_MODES]))
+		mod = true;
+
+	if (!mod)
+		return 0;
+	ret = dev->ethtool_ops->set_fecparam(dev, &data);
+	return (ret < 0) ? ret : 1;
+}
+
 int ethnl_set_params(struct sk_buff *skb, struct genl_info *info)
 {
 	struct nlattr *tb[ETHTOOL_A_PARAMS_MAX + 1];
@@ -941,6 +985,11 @@ int ethnl_set_params(struct sk_buff *skb, struct genl_info *info)
 		goto out_ops;
 	if (ret)
 		req_mask |= ETHTOOL_IM_PARAMS_EEE;
+	ret = params_update_fec(info, dev, tb[ETHTOOL_A_PARAMS_FEC]);
+	if (ret < 0)
+		goto out_ops;
+	if (ret)
+		req_mask |= ETHTOOL_IM_PARAMS_FEC;
 
 	ret = 0;
 out_ops:
-- 
2.21.0

