From 8919381eaecbad79c11c5ec09bb911667f543e1c Mon Sep 17 00:00:00 2001
From: Michal Kubecek <mkubecek@suse.cz>
Date: Mon, 11 Mar 2019 08:53:42 +0100
Subject: [PATCH 37/44] ethtool: provide FEC parameters with GET_PARAMS request

Add information about FEC settings (as provided by ETHTOOL_GFECPARAM ioctl
command) in GET_PARAMS reply when ETH_PARAMS_IM_FEC flag is set in the
request.

Send notification in the same format as reply when FEC parameters are
modified using the ioctl interface (ETHTOOL_SFECPARAM command).

Signed-off-by: Michal Kubecek <mkubecek@suse.cz>
---
 Documentation/networking/ethtool-netlink.txt | 13 ++++--
 include/uapi/linux/ethtool_netlink.h         | 13 +++++-
 net/ethtool/ioctl.c                          |  7 ++-
 net/ethtool/params.c                         | 45 ++++++++++++++++++++
 4 files changed, 72 insertions(+), 6 deletions(-)

diff --git a/Documentation/networking/ethtool-netlink.txt b/Documentation/networking/ethtool-netlink.txt
index 047410852ee7..ada700eb2892 100644
--- a/Documentation/networking/ethtool-netlink.txt
+++ b/Documentation/networking/ethtool-netlink.txt
@@ -412,9 +412,10 @@ GET_PARAMS
 
 GET_PARAMS request retrieves information provided by ioctl comands
 ETHTOOL_GCOALESCE (coalescing parameters), ETHTOOL_GRINGPARAM (ring sizes),
-ETHTOOL_GPAUSEPARAM (pause parameters), ETHTOOL_GCHANNELS (channel counts) and
-ETHTOOL_GEEE (EEE settings). For each of these, there is a bit in header
-info_mask so that only one type of information can be requested.
+ETHTOOL_GPAUSEPARAM (pause parameters), ETHTOOL_GCHANNELS (channel counts),
+ETHTOOL_GEEE (EEE settings) and ETHTOOL_GFECPARAM (FEC parameters). For each of
+these, there is a bit in header info_mask so that only one type of information
+can be requested.
 
 Request contents:
 
@@ -429,6 +430,7 @@ Info mask bits:
     ETH_PARAMS_IM_PAUSE			pause parameters
     ETH_PARAMS_IM_CHANNELS		channel counts
     ETH_PARAMS_IM_EEE			EEE settings
+    ETH_PARAMS_IM_FEC			FEC parameters
 
 Response contents: On top level, there is one attribute for each of the
 information categories, the information is nested in it.
@@ -488,6 +490,9 @@ information categories, the information is nested in it.
         ETHA_EEE_ENABLED			(bool)
         ETHA_EEE_TX_LPI_ENABLED			(bool)
         ETHA_EEE_TX_LPI_TIMER			(u32)
+    ETHA_PARAMS_FEC		(nested)	FEC parameters
+        ETHA_FEC_MODES				(bitfield32)
+		- active (value) and configured (selector) FEC encodings
 
 GET_PARAMS requests allow dumps and messages in the same format as response
 to them are broadcasted as notifications on change of these settings using
@@ -636,5 +641,5 @@ ETHTOOL_GLINKSETTINGS		ETHNL_CMD_GET_SETTINGS
 ETHTOOL_SLINKSETTINGS		ETHNL_CMD_SET_SETTINGS
 ETHTOOL_PHY_GTUNABLE		n/a
 ETHTOOL_PHY_STUNABLE		n/a
-ETHTOOL_GFECPARAM		n/a
+ETHTOOL_GFECPARAM		ETHNL_CMD_GET_PARAMS
 ETHTOOL_SFECPARAM		n/a
diff --git a/include/uapi/linux/ethtool_netlink.h b/include/uapi/linux/ethtool_netlink.h
index dd61c027ba44..8aba49b83487 100644
--- a/include/uapi/linux/ethtool_netlink.h
+++ b/include/uapi/linux/ethtool_netlink.h
@@ -297,6 +297,7 @@ enum {
 	ETHA_PARAMS_PAUSE,			/* nest - ETHA_PAUSE_* */
 	ETHA_PARAMS_CHANNELS,			/* nest - ETHA_CHANNELS_* */
 	ETHA_PARAMS_EEE,			/* nest - ETHA_EEE_* */
+	ETHA_PARAMS_FEC,			/* nest - ETHA_FEC_* */
 
 	__ETHA_PARAMS_CNT,
 	ETHA_PARAMS_MAX = (__ETHA_PARAMS_CNT - 1)
@@ -307,12 +308,14 @@ enum {
 #define ETH_PARAMS_IM_PAUSE			(1U << 2)
 #define ETH_PARAMS_IM_CHANNELS			(1U << 3)
 #define ETH_PARAMS_IM_EEE			(1U << 4)
+#define ETH_PARAMS_IM_FEC			(1U << 5)
 
 #define ETH_PARAMS_IM_ALL (ETH_PARAMS_IM_COALESCE | \
 			   ETH_PARAMS_IM_RING | \
 			   ETH_PARAMS_IM_PAUSE | \
 			   ETH_PARAMS_IM_CHANNELS | \
-			   ETH_PARAMS_IM_EEE)
+			   ETH_PARAMS_IM_EEE | \
+			   ETH_PARAMS_IM_FEC)
 
 enum {
 	ETHA_COALESCE_UNSPEC,
@@ -396,6 +399,14 @@ enum {
 	ETHA_EEE_MAX = (__ETHA_EEE_CNT - 1)
 };
 
+enum {
+	ETHA_FEC_UNSPEC,
+	ETHA_FEC_MODES,				/* bitfield32 */
+
+	__ETHA_FEC_CNT,
+	ETHA_FEC_MAX = (__ETHA_FEC_CNT - 1)
+};
+
 /* generic netlink info */
 #define ETHTOOL_GENL_NAME "ethtool"
 #define ETHTOOL_GENL_VERSION 1
diff --git a/net/ethtool/ioctl.c b/net/ethtool/ioctl.c
index af1337f0dc20..d14d8e7edf55 100644
--- a/net/ethtool/ioctl.c
+++ b/net/ethtool/ioctl.c
@@ -2336,6 +2336,7 @@ static int ethtool_get_fecparam(struct net_device *dev, void __user *useraddr)
 static int ethtool_set_fecparam(struct net_device *dev, void __user *useraddr)
 {
 	struct ethtool_fecparam fecparam;
+	int ret;
 
 	if (!dev->ethtool_ops->set_fecparam)
 		return -EOPNOTSUPP;
@@ -2343,7 +2344,11 @@ static int ethtool_set_fecparam(struct net_device *dev, void __user *useraddr)
 	if (copy_from_user(&fecparam, useraddr, sizeof(fecparam)))
 		return -EFAULT;
 
-	return dev->ethtool_ops->set_fecparam(dev, &fecparam);
+	ret = dev->ethtool_ops->set_fecparam(dev, &fecparam);
+	if (ret >= 0)
+		ethtool_notify(dev, NULL, ETHNL_CMD_SET_PARAMS,
+			       ETH_PARAMS_IM_FEC, NULL);
+	return ret;
 }
 
 /* The main entry point in this file.  Called from net/core/dev_ioctl.c */
diff --git a/net/ethtool/params.c b/net/ethtool/params.c
index 1af93a7a5b15..9ae4ccfe03ff 100644
--- a/net/ethtool/params.c
+++ b/net/ethtool/params.c
@@ -14,6 +14,7 @@ static const struct nla_policy get_params_policy[ETHA_PARAMS_MAX + 1] = {
 	[ETHA_PARAMS_PAUSE]		= { .type = NLA_REJECT },
 	[ETHA_PARAMS_CHANNELS]		= { .type = NLA_REJECT },
 	[ETHA_PARAMS_EEE]		= { .type = NLA_REJECT },
+	[ETHA_PARAMS_FEC]		= { .type = NLA_REJECT },
 };
 
 struct params_data {
@@ -26,6 +27,7 @@ struct params_data {
 	struct ethtool_pauseparam	pause;
 	struct ethtool_channels		channels;
 	struct ethtool_eee		eee;
+	struct ethtool_fecparam		fec;
 };
 
 static int parse_params(struct common_req_info *req_info, struct sk_buff *skb,
@@ -99,6 +101,13 @@ static int ethnl_get_eee(struct net_device *dev, struct ethtool_eee *data)
 	return dev->ethtool_ops->get_eee(dev, data);
 }
 
+static int ethnl_get_fec(struct net_device *dev, struct ethtool_fecparam *data)
+{
+	if (!dev->ethtool_ops->get_fecparam)
+		return -EOPNOTSUPP;
+	return dev->ethtool_ops->get_fecparam(dev, data);
+}
+
 static int prepare_params(struct common_req_info *req_info,
 			  struct genl_info *info)
 {
@@ -136,6 +145,11 @@ static int prepare_params(struct common_req_info *req_info,
 		if (ret < 0)
 			req_mask &= ~ETH_PARAMS_IM_EEE;
 	}
+	if (req_mask & ETH_PARAMS_IM_FEC) {
+		ret = ethnl_get_fec(dev, &data->fec);
+		if (ret < 0)
+			req_mask &= ~ETH_PARAMS_IM_FEC;
+	}
 	ethnl_after_ops(dev);
 
 	data->repdata_base.info_mask = req_mask;
@@ -194,6 +208,13 @@ static int eee_size(const struct ethtool_eee *eee, bool compact)
 	return nla_total_size(len);
 }
 
+static int fec_size(void)
+{
+	int len = nla_total_size(sizeof(struct nla_bitfield32));
+
+	return nla_total_size(len);
+}
+
 static int params_size(const struct common_req_info *req_info)
 {
 	struct params_data *data =
@@ -217,6 +238,8 @@ static int params_size(const struct common_req_info *req_info)
 			return ret;
 		len += ret;
 	}
+	if (info_mask & ETH_PARAMS_IM_FEC)
+		len += fec_size();
 
 	return len;
 }
@@ -384,6 +407,22 @@ static int fill_eee(struct sk_buff *skb, struct ethtool_eee *data, bool compact)
 	return ret;
 }
 
+static int fill_fec(struct sk_buff *skb, struct ethtool_fecparam *data)
+{
+	struct nlattr *nest = ethnl_nest_start(skb, ETHA_PARAMS_FEC);
+
+	if (!nest)
+		return -EMSGSIZE;
+	if (nla_put_bitfield32(skb, ETHA_FEC_MODES, data->active_fec,
+			       data->fec)) {
+		nla_nest_cancel(skb, nest);
+		return -EMSGSIZE;
+	}
+
+	nla_nest_end(skb, nest);
+	return 0;
+}
+
 static int fill_params(struct sk_buff *skb,
 		       const struct common_req_info *req_info)
 {
@@ -417,6 +456,11 @@ static int fill_params(struct sk_buff *skb,
 		if (ret < 0)
 			return ret;
 	}
+	if (info_mask & ETH_PARAMS_IM_FEC) {
+		ret = fill_fec(skb, &data->fec);
+		if (ret < 0)
+			return ret;
+	}
 
 	return 0;
 }
@@ -446,6 +490,7 @@ static const struct nla_policy set_params_policy[ETHA_PARAMS_MAX + 1] = {
 	[ETHA_PARAMS_PAUSE]		= { .type = NLA_NESTED },
 	[ETHA_PARAMS_CHANNELS]		= { .type = NLA_NESTED },
 	[ETHA_PARAMS_EEE]		= { .type = NLA_NESTED },
+	[ETHA_PARAMS_FEC]		= { .type = NLA_REJECT },
 };
 
 static const struct nla_policy coalesce_policy[ETHA_COALESCE_MAX + 1] = {
-- 
2.21.0

