From 67d734cf28d255f1fe52f9126f915f76b5b76c2d Mon Sep 17 00:00:00 2001
From: Michal Kubecek <mkubecek@suse.cz>
Date: Mon, 11 Mar 2019 08:07:38 +0100
Subject: [PATCH 32/44] ethtool: set pause parameters with SET_PARAMS request

Add support for setting device pause parameters using SET_SETTINGS request
with ETHTOOL_A_PARAMS_PAUSE nested attribute. This is a replacement of
ETHTOOL_SPAUSEPARAM ioctl command.

Signed-off-by: Michal Kubecek <mkubecek@suse.cz>
---
 Documentation/networking/ethtool-netlink.txt | 14 +++--
 net/ethtool/params.c                         | 55 +++++++++++++++++++-
 2 files changed, 63 insertions(+), 6 deletions(-)

diff --git a/Documentation/networking/ethtool-netlink.txt b/Documentation/networking/ethtool-netlink.txt
index d84d9122e92c..4c2d220ad71f 100644
--- a/Documentation/networking/ethtool-netlink.txt
+++ b/Documentation/networking/ethtool-netlink.txt
@@ -473,10 +473,10 @@ SET_PARAMS
 ----------
 
 SET_PARAMS request modifies the settings retrieved by GET_PARAMS, i.e. it
-replaces ETHTOOL_SCOALESCE and ETHTOOL_SRINGPARAM ioctl commands. For each of
-these, relevant data attributes are contained in a corresponding nest
-attribute. Some of the attributes provided by GET_SETPARAMS are read only and
-cannot be set by SET_PARAMS request.
+replaces ETHTOOL_SCOALESCE, ETHTOOL_SRINGPARAM and ETHTOOL_SPAUSEPARAM ioctl
+commands. For each of these, relevant data attributes are contained in
+a corresponding nest attribute. Some of the attributes provided by
+GET_SETPARAMS are read only and cannot be set by SET_PARAMS request.
 
     ETHTOOL_A_PARAMS_COALESCE		(nested)	coalescing parameters
         ETHTOOL_A_COALESCE_RX_USECS	    (u32)
@@ -506,6 +506,10 @@ cannot be set by SET_PARAMS request.
         ETHTOOL_A_RING_RX_MINI_PENDING	    (u32)
         ETHTOOL_A_RING_RX_JUMBO_PENDING	    (u32)
         ETHTOOL_A_RING_TX_PENDING	    (u32)
+    ETHTOOL_A_PARAMS_PAUSE		(nested)	pause parameters
+        ETHTOOL_A_PAUSE_AUTONEG		    (bool)
+        ETHTOOL_A_PAUSE_RX		    (bool)
+        ETHTOOL_A_PAUSE_TX		    (bool)
 
 
 Request translation
@@ -534,7 +538,7 @@ ETHTOOL_SCOALESCE		ETHNL_CMD_SET_PARAMS
 ETHTOOL_GRINGPARAM		ETHNL_CMD_GET_PARAMS
 ETHTOOL_SRINGPARAM		ETHNL_CMD_SET_PARAMS
 ETHTOOL_GPAUSEPARAM		ETHNL_CMD_GET_PARAMS
-ETHTOOL_SPAUSEPARAM		n/a
+ETHTOOL_SPAUSEPARAM		ETHNL_CMD_SET_PARAMS
 ETHTOOL_GRXCSUM			ETHNL_CMD_GET_SETTINGS
 ETHTOOL_SRXCSUM			ETHNL_CMD_SET_SETTINGS
 ETHTOOL_GTXCSUM			ETHNL_CMD_GET_SETTINGS
diff --git a/net/ethtool/params.c b/net/ethtool/params.c
index c306ad43d4d6..49cf3b326c59 100644
--- a/net/ethtool/params.c
+++ b/net/ethtool/params.c
@@ -306,7 +306,7 @@ static const struct nla_policy params_set_policy[ETHTOOL_A_PARAMS_MAX + 1] = {
 	[ETHTOOL_A_PARAMS_COMPACT]		= { .type = NLA_FLAG },
 	[ETHTOOL_A_PARAMS_COALESCE]		= { .type = NLA_NESTED },
 	[ETHTOOL_A_PARAMS_RING]			= { .type = NLA_NESTED },
-	[ETHTOOL_A_PARAMS_PAUSE]		= { .type = NLA_REJECT },
+	[ETHTOOL_A_PARAMS_PAUSE]		= { .type = NLA_NESTED },
 };
 
 static const struct nla_policy coalesce_policy[ETHTOOL_A_COALESCE_MAX + 1] = {
@@ -512,6 +512,54 @@ static int params_update_ring(struct genl_info *info, struct net_device *dev,
 	return (ret < 0) ? ret : 1;
 }
 
+static const struct nla_policy pause_policy[ETHTOOL_A_PAUSE_MAX + 1] = {
+	[ETHTOOL_A_PAUSE_UNSPEC]	= { .type = NLA_REJECT },
+	[ETHTOOL_A_PAUSE_AUTONEG]	= { .type = NLA_U8 },
+	[ETHTOOL_A_PAUSE_RX]		= { .type = NLA_U8 },
+	[ETHTOOL_A_PAUSE_TX]		= { .type = NLA_U8 },
+};
+
+/**
+ * params_update_pause() - update pause parameters from nested attribute
+ * @info: genl_info pointer (only needed for extack)
+ * @dev:  device to set pause parameters for
+ * @nest: ETHTOOL_A_PARAMS_PAUSE nested attribute
+ *
+ * Return: negative code on error, 0 if no change, >0 if there was a change
+ */
+static int params_update_pause(struct genl_info *info, struct net_device *dev,
+			struct nlattr *nest)
+{
+	struct nlattr *tb[ETHTOOL_A_RING_MAX + 1];
+	struct ethtool_pauseparam data = {};
+	bool mod = false;
+	int ret;
+
+	if (!nest)
+		return 0;
+	if (!dev->ethtool_ops->get_pauseparam ||
+	    !dev->ethtool_ops->set_pauseparam)
+		return -EOPNOTSUPP;
+	dev->ethtool_ops->get_pauseparam(dev, &data);
+
+	ret = nla_parse_nested(tb, ETHTOOL_A_PAUSE_MAX, nest, pause_policy,
+			       info->extack);
+	if (ret < 0)
+		return ret;
+
+	if (ethnl_update_u32(&data.autoneg, tb[ETHTOOL_A_PAUSE_AUTONEG]))
+		mod = true;
+	if (ethnl_update_u32(&data.rx_pause, tb[ETHTOOL_A_PAUSE_RX]))
+		mod = true;
+	if (ethnl_update_u32(&data.tx_pause, tb[ETHTOOL_A_PAUSE_TX]))
+		mod = true;
+
+	if (!mod)
+		return 0;
+	ret = dev->ethtool_ops->set_pauseparam(dev, &data);
+	return (ret < 0) ? ret : 1;
+}
+
 int ethnl_set_params(struct sk_buff *skb, struct genl_info *info)
 {
 	struct nlattr *tb[ETHTOOL_A_PARAMS_MAX + 1];
@@ -541,6 +589,11 @@ int ethnl_set_params(struct sk_buff *skb, struct genl_info *info)
 		goto out_ops;
 	if (ret)
 		req_mask |= ETHTOOL_IM_PARAMS_RING;
+	ret = params_update_pause(info, dev, tb[ETHTOOL_A_PARAMS_PAUSE]);
+	if (ret < 0)
+		goto out_ops;
+	if (ret)
+		req_mask |= ETHTOOL_IM_PARAMS_PAUSE;
 
 	ret = 0;
 out_ops:
-- 
2.21.0

