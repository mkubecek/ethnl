From 9abaac5d74103d024e45aa825f764419ca5295ea Mon Sep 17 00:00:00 2001
From: Michal Kubecek <mkubecek@suse.cz>
Date: Sat, 9 Dec 2017 00:08:21 +0100
Subject: [PATCH 20/34] netlink: add netlink handler for geee (--show-eee)

Implement "ethtool --show-eee <dev>" subcommand using netlink interface
command ETHTOOL_MSG_PARAMS_GET with ETHTOOL_IM_PARAMS_EEE mask.

Signed-off-by: Michal Kubecek <mkubecek@suse.cz>
---
 ethtool.c         |  3 ++-
 netlink/extapi.h  |  1 +
 netlink/monitor.c |  5 ++++
 netlink/params.c  | 69 +++++++++++++++++++++++++++++++++++++++++++++++
 4 files changed, 77 insertions(+), 1 deletion(-)

diff --git a/ethtool.c b/ethtool.c
index 0a1d57331da0..b5bb5f9155c7 100644
--- a/ethtool.c
+++ b/ethtool.c
@@ -4989,6 +4989,7 @@ static int show_usage(struct cmd_context *ctx);
 #define nl_gring	NULL
 #define nl_gpause	NULL
 #define nl_gchannels	NULL
+#define nl_geee		NULL
 #endif
 
 static const struct option {
@@ -5159,7 +5160,7 @@ static const struct option {
 	  "		[ hex on|off ]\n"
 	  "		[ offset N ]\n"
 	  "		[ length N ]\n" },
-	{ "--show-eee", 1, do_geee, NULL,
+	{ "--show-eee", 1, do_geee, nl_geee,
 	  "Show EEE settings"},
 	{ "--set-eee", 1, do_seee, NULL,
 	  "Set EEE settings",
diff --git a/netlink/extapi.h b/netlink/extapi.h
index 2ca01fb4c9ea..2d0ce8649052 100644
--- a/netlink/extapi.h
+++ b/netlink/extapi.h
@@ -25,6 +25,7 @@ int nl_gcoalesce(struct cmd_context *ctx);
 int nl_gring(struct cmd_context *ctx);
 int nl_gpause(struct cmd_context *ctx);
 int nl_gchannels(struct cmd_context *ctx);
+int nl_geee(struct cmd_context *ctx);
 int nl_monitor(struct cmd_context *ctx);
 
 void monitor_usage();
diff --git a/netlink/monitor.c b/netlink/monitor.c
index 15fffea8dde2..3d1bdc327988 100644
--- a/netlink/monitor.c
+++ b/netlink/monitor.c
@@ -88,6 +88,11 @@ static struct monitor_option monitor_opts[] = {
 		.cmd		= ETHTOOL_MSG_PARAMS_NTF,
 		.info_mask	= ETHTOOL_IM_PARAMS_CHANNELS,
 	},
+	{
+		.pattern	= "--show-eee|--set-eee",
+		.cmd		= ETHTOOL_MSG_PARAMS_NTF,
+		.info_mask	= ETHTOOL_IM_PARAMS_EEE,
+	},
 };
 
 static bool pattern_match(const char *s, const char *pattern)
diff --git a/netlink/params.c b/netlink/params.c
index 35056ecf60c6..999abc6b5cb0 100644
--- a/netlink/params.c
+++ b/netlink/params.c
@@ -135,6 +135,61 @@ static int show_channels(struct nl_context *nlctx, const struct nlattr *nest)
 	return 0;
 }
 
+static int show_eee(struct nl_context *nlctx, const struct nlattr *nest)
+{
+	const struct nlattr *tb[ETHTOOL_A_EEE_MAX + 1] = {};
+	DECLARE_ATTR_TB_INFO(tb);
+	bool active, enabled, tx_lpi_enabled;
+	int ret;
+
+	if (!nest)
+		return -EOPNOTSUPP;
+	ret = mnl_attr_parse_nested(nest, attr_cb, &tb_info);
+	if (ret < 0)
+		return ret;
+	if (!tb[ETHTOOL_A_EEE_LINK_MODES] || !tb[ETHTOOL_A_EEE_PEER_MODES] ||
+	    !tb[ETHTOOL_A_EEE_ACTIVE] || !tb[ETHTOOL_A_EEE_ENABLED] ||
+	    !tb[ETHTOOL_A_EEE_TX_LPI_ENABLED] ||!tb[ETHTOOL_A_EEE_TX_LPI_TIMER])
+		return -EFAULT;
+
+
+	active = mnl_attr_get_u8(tb[ETHTOOL_A_EEE_ACTIVE]);
+	enabled = mnl_attr_get_u8(tb[ETHTOOL_A_EEE_ENABLED]);
+	tx_lpi_enabled = mnl_attr_get_u8(tb[ETHTOOL_A_EEE_TX_LPI_ENABLED]);
+
+	printf("EEE Settings for %s:\n", nlctx->devname);
+	printf("\tEEE status: ");
+	if (bitset_is_empty(tb[ETHTOOL_A_EEE_LINK_MODES], true, &ret)) {
+		printf("not supported\n");
+		return 0;
+	}
+	if (!enabled)
+		printf("disabled\n");
+	else
+		printf("enabled - %s\n", active ? "active" : "inactive");
+	printf("\tTx LPI: ");
+	if (tx_lpi_enabled)
+		printf("%u (us)\n",
+		       mnl_attr_get_u32(tb[ETHTOOL_A_EEE_TX_LPI_TIMER]));
+	else
+		printf("disabled\n");
+
+	ret = dump_link_modes(tb[ETHTOOL_A_EEE_LINK_MODES], true,
+			      LM_CLASS_REAL,
+			      "Supported EEE link modes:  ", NULL, "\n",
+			      "Not reported");
+	ret = dump_link_modes(tb[ETHTOOL_A_EEE_LINK_MODES], false,
+			      LM_CLASS_REAL,
+			      "Advertised EEE link modes:  ", NULL, "\n",
+			      "Not reported");
+	ret = dump_link_modes(tb[ETHTOOL_A_EEE_PEER_MODES], false,
+			      LM_CLASS_REAL,
+			      "Link partner advertised EEE link modes:  ", NULL,
+			      "\n", "Not reported");
+
+	return 0;
+}
+
 int params_reply_cb(const struct nlmsghdr *nlhdr, void *data)
 {
 	const struct nlattr *tb[ETHTOOL_A_PARAMS_MAX + 1] = {};
@@ -185,6 +240,15 @@ int params_reply_cb(const struct nlmsghdr *nlhdr, void *data)
 			return MNL_CB_ERROR;
 		}
 	}
+	if (mask_ok(nlctx, ETHTOOL_IM_PARAMS_EEE)) {
+		ret = show_eee(nlctx, tb[ETHTOOL_A_PARAMS_EEE]);
+		if ((ret < 0) && show_only(nlctx, ETHTOOL_IM_PARAMS_EEE)) {
+			nlctx->exit_code = 1;
+			errno = -ret;
+			perror("Cannot get device EEE settings");
+			return MNL_CB_ERROR;
+		}
+	}
 
 	return MNL_CB_OK;
 }
@@ -219,3 +283,8 @@ int nl_gchannels(struct cmd_context *ctx)
 {
 	return params_request(ctx, ETHTOOL_IM_PARAMS_CHANNELS);
 }
+
+int nl_geee(struct cmd_context *ctx)
+{
+	return params_request(ctx, ETHTOOL_IM_PARAMS_EEE);
+}
-- 
2.22.0

