From 26e923b83ed7592bf8a6ae23425ae7b3c8f0ff47 Mon Sep 17 00:00:00 2001
From: Michal Kubecek <mkubecek@suse.cz>
Date: Fri, 8 Dec 2017 23:59:50 +0100
Subject: [PATCH 17/34] netlink: add netlink handler for gring (-g)

Implement "ethtool -g <dev>" subcommand using netlink interface command
ETHNL_CMD_GET_PARAMS with ETHTOOL_IM_PARAMS_RING mask.

Signed-off-by: Michal Kubecek <mkubecek@suse.cz>
---
 ethtool.c         |  3 ++-
 netlink/extapi.h  |  1 +
 netlink/monitor.c |  5 +++++
 netlink/params.c  | 42 ++++++++++++++++++++++++++++++++++++++++++
 4 files changed, 50 insertions(+), 1 deletion(-)

diff --git a/ethtool.c b/ethtool.c
index 9495352337d4..efe80db1df18 100644
--- a/ethtool.c
+++ b/ethtool.c
@@ -4980,6 +4980,7 @@ static int show_usage(struct cmd_context *ctx);
 #define nl_gprivflags	NULL
 #define nl_sprivflags	NULL
 #define nl_gcoalesce	NULL
+#define nl_gring	NULL
 #endif
 
 static const struct option {
@@ -5036,7 +5037,7 @@ static const struct option {
 	  "		[tx-usecs-high N]\n"
 	  "		[tx-frames-high N]\n"
 	  "		[sample-interval N]\n" },
-	{ "-g|--show-ring", 1, do_gring, NULL,
+	{ "-g|--show-ring", 1, do_gring, nl_gring,
 	  "Query RX/TX ring parameters" },
 	{ "-G|--set-ring", 1, do_sring, NULL,
 	  "Set RX/TX ring parameters",
diff --git a/netlink/extapi.h b/netlink/extapi.h
index a63f79eee2c8..deba845b52ae 100644
--- a/netlink/extapi.h
+++ b/netlink/extapi.h
@@ -22,6 +22,7 @@ int nl_sfeatures(struct cmd_context *ctx);
 int nl_gprivflags(struct cmd_context *ctx);
 int nl_sprivflags(struct cmd_context *ctx);
 int nl_gcoalesce(struct cmd_context *ctx);
+int nl_gring(struct cmd_context *ctx);
 int nl_monitor(struct cmd_context *ctx);
 
 void monitor_usage();
diff --git a/netlink/monitor.c b/netlink/monitor.c
index 463c016894f1..966ec621fe29 100644
--- a/netlink/monitor.c
+++ b/netlink/monitor.c
@@ -176,6 +176,11 @@ static struct monitor_option monitor_opts[] = {
 		.cmd		= ETHNL_CMD_SET_PARAMS,
 		.info_mask	= ETHTOOL_IM_PARAMS_COALESCE,
 	},
+	{
+		.pattern	= "-g|--show-ring|-G|--set-ring",
+		.cmd		= ETHNL_CMD_SET_PARAMS,
+		.info_mask	= ETHTOOL_IM_PARAMS_RING,
+	},
 };
 
 static bool pattern_match(const char *s, const char *pattern)
diff --git a/netlink/params.c b/netlink/params.c
index 8755a8aae9a8..299b43f9d18e 100644
--- a/netlink/params.c
+++ b/netlink/params.c
@@ -57,6 +57,34 @@ static int show_coalesce(struct nl_context *nlctx, const struct nlattr *nest)
 	return 0;
 }
 
+static int show_ring(struct nl_context *nlctx, const struct nlattr *nest)
+{
+	const struct nlattr *tb[ETHTOOL_A_RING_MAX + 1] = {};
+	DECLARE_ATTR_TB_INFO(tb);
+	int ret;
+
+	if (!nest)
+		return -EOPNOTSUPP;
+	ret = mnl_attr_parse_nested(nest, attr_cb, &tb_info);
+	if (ret < 0)
+		return ret;
+
+	printf("Ring parameters for %s:\n", nlctx->devname);
+	printf("Pre-set maximums:\n");
+	show_u32(tb[ETHTOOL_A_RING_RX_MAX_PENDING], "RX:\t\t");
+	show_u32(tb[ETHTOOL_A_RING_RX_MINI_MAX_PENDING], "RX Mini:\t");
+	show_u32(tb[ETHTOOL_A_RING_RX_JUMBO_MAX_PENDING], "RX Jumbo:\t");
+	show_u32(tb[ETHTOOL_A_RING_TX_MAX_PENDING], "TX:\t\t");
+	printf("Current hardware settings:\n");
+	show_u32(tb[ETHTOOL_A_RING_RX_PENDING], "RX:\t\t");
+	show_u32(tb[ETHTOOL_A_RING_RX_MINI_PENDING], "RX Mini:\t");
+	show_u32(tb[ETHTOOL_A_RING_RX_JUMBO_PENDING], "RX Jumbo:\t");
+	show_u32(tb[ETHTOOL_A_RING_TX_PENDING], "TX:\t\t");
+	putchar('\n');
+
+	return 0;
+}
+
 int params_reply_cb(const struct nlmsghdr *nlhdr, void *data)
 {
 	const struct nlattr *tb[ETHTOOL_A_PARAMS_MAX + 1] = {};
@@ -80,6 +108,15 @@ int params_reply_cb(const struct nlmsghdr *nlhdr, void *data)
 			return MNL_CB_ERROR;
 		}
 	}
+	if (mask_ok(nlctx, ETHTOOL_IM_PARAMS_RING)) {
+		ret = show_ring(nlctx, tb[ETHTOOL_A_PARAMS_RING]);
+		if ((ret < 0) && show_only(nlctx, ETHTOOL_IM_PARAMS_RING)) {
+			nlctx->exit_code = 76;
+			errno = -ret;
+			perror("Cannot get device ring settings");
+			return MNL_CB_ERROR;
+		}
+	}
 
 	return MNL_CB_OK;
 }
@@ -101,3 +138,8 @@ int nl_gcoalesce(struct cmd_context *ctx)
 {
 	return params_request(ctx, ETHTOOL_IM_PARAMS_COALESCE);
 }
+
+int nl_gring(struct cmd_context *ctx)
+{
+	return params_request(ctx, ETHTOOL_IM_PARAMS_RING);
+}
-- 
2.21.0

